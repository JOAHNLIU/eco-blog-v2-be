name: Deploy to App Engine

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  test-and-lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint

      - name: Run tests
        env:
          POSTGRES_HOST: ${{ secrets.POSTGRES_HOST }}
          POSTGRES_PORT: ${{ secrets.POSTGRES_PORT }}
          POSTGRES_USER: ${{ secrets.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
          POSTGRES_DB: ${{ secrets.TEST_POSTGRES_DB }}
        run: npm test

  deploy:
    if: github.ref == 'refs/heads/main' && success()
    needs: test-and-lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Authenticate to GCP
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      - name: Encode FIREBASE_CONFIG
        id: encode_firebase_config
        run: echo "${{ secrets.FIREBASE_CONFIG }}" | base64 -w 0

      - name: Deploy to App Engine
        uses: google-github-actions/deploy-appengine@v1
        with:
          project_id: ${{ secrets.APP_ENGINE_PROJECT }}
          deliverables: app.yaml
          env_vars: |
            POSTGRES_HOST=${{ secrets.POSTGRES_HOST }},
            POSTGRES_PORT=${{ secrets.POSTGRES_PORT }},
            POSTGRES_USER=${{ secrets.POSTGRES_USER }},
            POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }},
            POSTGRES_DB=${{ secrets.POSTGRES_DB }},
            FIREBASE_CONFIG=${{ steps.encode_firebase_config.outputs.stdout }}
